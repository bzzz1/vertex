cd D:/EasyPHP-DevServer-14.1VC11/data/localweb/projects/vertex
_________________________________________________________________________________________________________
git add -u									[Add all only modified files to stage]
git add --all								[Add all new and modified files]
git add <folder>/*							[Add all files in folder to stage]
git add --all <folder>/						[Add all files in folder to stage]
git add <path/to/file>						[Add NEW or modified file to stage]
git branch <branch>							[Add new local branch <branch>]
git branch									[View all branches]
git branch -d <branch>						[Delete only already merged branch clean_up]
git branch -d -f <branch>					[Delete even not yet merged branch clean_up]
git branch -r								[View all LOCAL branches (or REMOTE ONLY after fetch)]
git branch --set-upstream-to=origin/master	[Set current local branch to track remote <origin>/<branch>]
git checkout -- <file>		
git checkout HEAD
git checkout <branch>
git checkout -b <branch>					[Checkout and create new branch at the same time]
git checkout <tag>							[Roll back to <tag> release]
git checkout -- <file>					[Drop all changes in file <file> since last commit]
git clean [-n, -i, -f]						[Show or force remove untaracking files]
git clone https://github.com/bzzz1/vertex.git
git commit --amend -m "bla bla bla"			[Add to the last commit and rewrite commit msg]
git commit -a -m 'Description'				[Add changes from all only TRACKED files and commit them]
git commit -m "Any changes"		
git config --list							[Show all git settings]
git config --global core.autocrlf false
git config --global core.safecrlf false
git config --global user.name 'Iaroslav'
git config --global user.email 'beststrelok@gmail.com'
git config --global push.default matching
git config --global push.default simple
____INSPECTION__________________________________________________________________________________________________
git blame <file>								
git diff 									[View changes between last commit and now if unstaged]
git diff HEAD~~								[View changes between HEAD~~ and now if unstaged]
git diff --staged							[View changes between HEAD and staged]
git diff a0d3fe6 f0drfe4					[View changes between two commits]
git diff --name-only HEAD^..HEAD			[Show changed file names between 2 commits]
git diff <branch> <branch>
git diff --since=1.day.ago --until=1.hour.ago
git log										[Log all commits to remote origin]
git log -p 									[Log full changes of all commits]
git log --oneline
git log --oneline --graph
git log --until=1.minute.ago
git log --since=1.day.ago
git log --since=1.day.ago --until=1.hour.ago
git log --since=2000-01-01 --until=2014-11-23
git log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short
git reflog									[Get the SHA-1 of the previous state]
________________________________________________________________________________________________________________
git merge <branch>							[Merge local current branch with local <branch>]
git push
git push -u <origin> <branch>				[Remember <origin> <branch> locally and push to remote]
git push <origin> <branch>					[Make local <branch> remote]
git push <origin> :<branch>					[Remove only remote <branch> in <origin> remote repo]
git pull <origin> <branch>
git push <origin> <branch1>:<branch2>		[Push from local <branch1> to remote <branch2>] 
____REBASE_REMOTE______________________________________________________________________________________________
git fetch -v								[Fetch all from remote origin]
git rebase 									[Start rebase one by time commit from fetched <origin>/<branch> to current commits]
____REBASE_LOCAL________
git checkout admin
git rebase master
git checkout master
git merge admin
____WITH_CONFLICTS______
git add <resolved_file>						[Mark the file as resolved]
git rebase --continue						[After conflict was resolved]
git rebase --skip							[Skip the path]
git rebase --abort							[Roll back rebase]
__________________________________________________________________________________________________________
git revert HEAD --no-edit					[Undo specified commit]
git remote -v								[Show remote repositories]
git remote add <origin> https://github.com/bzzz1/vertex.git
git remote prune <origin>					[Clean up local repo by deleting removed remote branches in <origin>] 
git remote show <origin>					[View all remote branches, <branch> for pull]
git remote rm <origin>						[Remove remote repo]
git reset --hard <l_origin/l_branch>		[Set HEAD to last commit at origin/master and change files]
git reset --hard a0d3fe6
git reset									[Remove all files from stage]
git reset --hard 							[Overwrites all files contents that exist in remote origin]
git reset HEAD <file>	 					[Unstage the file]
git reset --soft HEAD^						[Drop the last commit]
git rm <file> -f 							[Remove real file <file> on PC ONLY AFTER git add]
git show --name_only HEAD~~					[Show changed files in specified commit]
____TAGS_________________________________________________________________________________________________
git tag										[Show all tags]		
git tag -a <tag> -m "bal bal bla"			[Add a new local tag <tag>]
git push --tags								[Push local tags to remote]
_________________________________________________________________________________________________________
Book: 		http://git-scm.com/book/en/v
Try Git: 	https://try.github.io/levels/1/challenges/1
Reference:	http://git-scm.com/docs
Courses:	https://www.codeschool.com/paths/git
Immersion:	http://gitimmersion.com/lab_10.html
_________________________________________________________________________________________________________
<origin> - the name of remote repository
<branch> - the name of local or remote branch
<l_origin/l_branch> - link to local repo "l_origin" on local branch "l_branch"
<file>, <folder>, <path/to/file> - path to the file "file" or to the folder "folder"
_________________________________________________________________________________________________________
.git/info/exclude.txt -> put files or folder to be excluded from project via git
_____ALIASES_____________________________________________________________________________________________
____.git->etc>profile_______
alias gs='git status '
alias ga='git add '
alias gaa='git add --all'
alias gb='git branch '
alias gc='git commit -m'
alias gd='git diff'
alias go='git checkout '
alias got='git '
alias get='git '
alias gob='git checkout -b '
alias gph='git push '
alias gpl='git pull '
alias gf='git fetch -v'
alias grh='git reset --hard '
alias grmf='git rm -f '
alias gre='git rebase '
alias grt='git reset '
alias gll="git log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short"
alias glr="git log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short origin/master"
alias cdg='cd D:/EasyPHP-DevServer-14.1VC11/data/localweb/projects/vertex'
______manually_____________
# git config --global alias.st status
# git config --global alias.co checkout
# git config --global alias.ci commit
# git config --global alias.st status
# git config --global alias.br branch
# git config --global alias.hist 'log --pretty=format:"%h %ad | %s%d [%an]" --graph --date=short'